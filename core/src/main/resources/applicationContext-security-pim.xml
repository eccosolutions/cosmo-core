<?xml version="1.0" encoding="UTF-8"?>

<!--
    Copyright 2005 Open Source Applications Foundation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<!-- Security configuration for the Web Console -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

  <bean id="pimAccessDecisionManager"
        class="org.springframework.security.access.vote.AffirmativeBased">
    <property name="allowIfAllAbstainDecisions">
      <value>false</value>
    </property>
    <property name="decisionVoters">
      <list>
        <ref bean="ticketVoter"/>
        <ref bean="roleVoter"/>
      </list>
    </property>
  </bean>

  <!-- interceptor which performs authorization for web requests -->

   <bean id="pimFilterInvocationInterceptor"
         class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
     <property name="authenticationManager" ref="authenticationManager"/>
     <property name="accessDecisionManager" ref="pimAccessDecisionManager"/>
     <property name="securityMetadataSource" ref="pimSecurityMetadata"/>
   </bean>

	<security:filter-security-metadata-source id="pimSecurityMetadata">
		<security:intercept-url pattern="/**/*.css*" access="ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/**/*.js" access="ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/**/*.js?*" access="ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/**/*.html*" access="ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/**/*.prefs*" access="ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/*.ico" access="ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/**/*.gif" access="ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/**/*.jpg" access="ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/**/*.png" access="ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT"/>

		<security:intercept-url pattern="/pim/login.page*" access="ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/pim/lang.page*" access="ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/pim/logout.page*" access="ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/pim*" access="ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/pim/keepalive.jsp" access="ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/pim/collection/**" access="ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/" access="ROLE_USER, ROLE_ROOT"/>
		<security:intercept-url pattern="/**" access="ROLE_ROOT"/>
	</security:filter-security-metadata-source>

  <!-- filter chain that kicks off request-time processing -->

  <bean id="pimFilterChainProxy" class="org.springframework.security.web.FilterChainProxy">
      <security:filter-chain-map path-type="ant">
          <security:filter-chain pattern="/**" filters="pimHttpSessionContextIntegrationFilter,protocolTicketAuthenticationClearingFilter,pimFormBasedProcessingFilter,protocolTicketProcessingFilter,pimAnonymousProcessingFilter,pimExceptionTranslationFilter,pimFilterInvocationInterceptor,protocolExtraTicketProcessingFilter"/>
      </security:filter-chain-map>
  </bean>

  <!-- filter that integrates SecurityContext into HTTP Session -->

  <bean id="pimHttpSessionContextIntegrationFilter"
        class="org.springframework.security.web.context.SecurityContextPersistenceFilter"/>

   <!-- filter that performs form-based authentication -->

  <bean id="pimFormBasedAuthenticationEntryPoint"
        class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
    <property name="loginFormUrl" value="/login"/>
    <property name="forceHttps" value="false"/>
  </bean>

  <bean id="pimFormBasedProcessingFilter"
        class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
    <property name="authenticationManager" ref="authenticationManager"/>
      <property name="authenticationFailureUrl" value="/login"/>
      <property name="defaultTargetUrl" value="/index.jsp"/>
      <property name="alwaysUseDefaultTargetUrl" value="false"/>
  </bean>

  <!-- filter that performs anonymous authentication -->

  <bean id="pimAnonymousProcessingFilter"
        class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
    <property name="key">
      <value>badgerbadgerbadger</value>
    </property>
    <property name="userAttribute">
      <value>anonymous,ROLE_ANONYMOUS</value>
    </property>
  </bean>

  <!-- filter that converts authen/authz exceptions to web pages -->
  <bean id="pimExceptionTranslationFilter"
        class="org.springframework.security.web.access.ExceptionTranslationFilter">
    <property name="authenticationEntryPoint">
      <ref bean="pimFormBasedAuthenticationEntryPoint"/>
    </property>
  </bean>

</beans>
